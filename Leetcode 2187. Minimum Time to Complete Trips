class Solution {
public:
    bool check( vector<int>& time, int totalTrips, long long mid ){
        long long sum = 0;
        for( auto num : time ) sum += ( mid / num );
        if( sum >= totalTrips ) return true;
        return false;
    }

    long long minimumTime(vector<int>& time, int totalTrips) {
        int n = time.size();
        long long i;
        long long low = 1;
        long long high = time[0];
        for( i = 0 ; i < n ; i++ ) {
            if( time[i] > high ) high = time[i];
        }
        high = totalTrips * high;
        long long mid;
        long long ans;
        long long sum; 
        while( low <= high ){
            mid = low + ( high- low ) / 2;
            if( check( time, totalTrips, mid ) ){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};
